global
    #log /dev/log    local5
    #log /dev/log    local5 notice
    #stats socket /run/haproxy/admin.sock mode 660 level admin
    #stats timeout 30s

# Share config for next blocks using a defaults block
defaults
    mode    http
    option  httplog
    option  dontlognull
    timeout connect 5s
    timeout client  50s
    timeout server  50s

    balance roundrobin

    option tcp-check
    option httpchk GET '/healthcheck'
    http-check send-state
    timeout check 2s

    default-server inter 3s

    # Send server name to target server
    http-send-name-header 'X-Haproxy-Backend-Server'


listen stats
    bind *:8081
    stats enable
    stats uri '/haproxy'
    stats show-desc
    stats show-legends
    stats show-node
    stats refresh 5s
    stats realm 'Auth required'
    stats auth foo:bar
    stats admin if TRUE


frontend frontend
    ### Add X-Forwarded-For header
    ### option  forwardfor

    ### maxconn 800
    bind *:8080

    errorfile 503 '/usr/local/etc/haproxy/responses/503.http'

    default_backend app

    ### reqadd 'X-Tracability: haproxy-myfront'
    http-request add-header 'X-Haproxy-Frontend' 'frontend'

    # Redirect web sockets to one server only (state not shared)
    acl is_connection_upgrade hdr(Connection) -i Upgrade
    acl is_websocket hdr(Upgrade) -i WebSocket
    use_backend websocket if is_connection_upgrade is_websocket


backend app
    server zucchini1 zucchini1:8080 check port 8081 weight 2
    server zucchini2 zucchini2:8080 check port 8081 weight 2
    server zucchini3 zucchini3:8080 check port 8081 weight 1


backend websocket
    server zucchini2 zucchini3:8080 check port 8081
